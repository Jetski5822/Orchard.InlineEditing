@using Orchard.ContentManagement
@using Orchard.Environment.Descriptor.Models
@using Orchard.Localization

@{
    var shellDescriptor = WorkContext.Resolve<ShellDescriptor>();
}

<script type="text/javascript">
    var mediaPickerEnabled = @(shellDescriptor.Features.Any(x => x.Name == "Orchard.MediaPicker") ? "true" : "false");
    var mediaLibraryEnabled = @(shellDescriptor.Features.Any(x => x.Name == "Orchard.MediaLibrary") ? "true" : "false");
    var directionality = '@Html.Directionality((IContent)Model.ContentItem)';
</script>

@{ 
    Script.Require("TinyMce");
    Script.Include("orchard-inlineedit-tinymceeditor.js");
    Script.Require("jQueryColorBox");
    Style.Require("jQueryColorBox");

    var body = new HtmlString(((string)Model.Text).Replace(Environment.NewLine, "</p>" + Environment.NewLine + "<p>")); 
}

@Html.TextArea("Text", (string)Model.Text, 25, 80,
     new Dictionary<string, object> {
        {"style", "display:none"}
	 })

<div class="html tinymce" style="width:100%" id="@Html.Id("Text")">
    @body
</div>